name: Build and Release Plugins

on:
  push:
    branches: [ main ]
    paths:
      - 'custom-code-manager/**'
      - 'smart-sitemap/**'
      - 'teo-cache-purge/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 打包 custom-code-manager
      - name: Build custom-code-manager
        run: |
          VER=$(grep '^Version:' custom-code-manager/custom-code-manager.php | head -n1 | cut -d: -f2 | xargs)
          if [ -z "$VER" ]; then
            echo "Error: Cannot extract version from custom-code-manager."
            exit 1
          fi
          cd custom-code-manager && zip -r ../custom-code-manager-$VER.zip . -x "*.git*"
          echo "VER_CCM=$VER" >> $GITHUB_ENV

      # 打包 smart-sitemap
      - name: Build smart-sitemap
        run: |
          VER=$(grep '^Version:' smart-sitemap/smart-sitemap.php | head -n1 | cut -d: -f2 | xargs)
          if [ -z "$VER" ]; then
            echo "Error: Cannot extract version from smart-sitemap."
            exit 1
          fi
          cd smart-sitemap && zip -r ../smart-sitemap-$VER.zip . -x "*.git*"
          echo "VER_SS=$VER" >> $GITHUB_ENV

      # 打包 teo-cache-purge
      - name: Build teo-cache-purge
        run: |
          VER=$(grep '^Version:' teo-cache-purge/teo-cache-purge.php | head -n1 | cut -d: -f2 | xargs)
          if [ -z "$VER" ]; then
            echo "Error: Cannot extract version from teo-cache-purge."
            exit 1
          fi
          cd teo-cache-purge && zip -r ../teo-cache-purge-$VER.zip . -x "*.git*"
          echo "VER_TEO=$VER" >> $GITHUB_ENV

      # 创建Release（修复files列表格式：每个文件前加-，且对齐）
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VER_CCM }}_${{ env.VER_SS }}_${{ env.VER_TEO }}
          release_name: Plugins Release ${{ env.VER_CCM }} · ${{ env.VER_SS }} · ${{ env.VER_TEO }}
          files:
            - custom-code-manager-${{ env.VER_CCM }}.zip
            - smart-sitemap-${{ env.VER_SS }}.zip
            - teo-cache-purge-${{ env.VER_TEO }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
